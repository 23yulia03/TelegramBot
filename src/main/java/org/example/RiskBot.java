package org.example;

import io.github.cdimascio.dotenv.Dotenv;
import org.telegram.telegrambots.bots.TelegramLongPollingBot;
import org.telegram.telegrambots.meta.api.methods.send.SendMessage;
import org.telegram.telegrambots.meta.api.objects.Message;
import org.telegram.telegrambots.meta.api.objects.Update;
import org.telegram.telegrambots.meta.exceptions.TelegramApiException;

import java.text.DecimalFormat;
import java.util.Arrays;
import java.util.List;

public class RiskBot extends TelegramLongPollingBot {
    private final RiskDataStorage storage;
    private final DecimalFormat df = new DecimalFormat("0.00%");

    public RiskBot() {
        this.storage = new RiskDataStorage();
    }

    @Override
    public String getBotUsername() {
        return "NeoRisk_bot";
    }

    @Override
    public String getBotToken() {
        Dotenv dotenv = Dotenv.configure()
                .filename("token.env") // –µ—Å–ª–∏ –Ω–µ .env
                .load();
        return dotenv.get("BOT_TOKEN");
    }

    @Override
    public void onUpdateReceived(Update update) {
        if (!update.hasMessage() || !update.getMessage().hasText()) {
            return;
        }

        Message message = update.getMessage();
        String chatId = message.getChatId().toString();
        String text = message.getText().trim();

        try {
            if (text.startsWith("/")) {
                handleCommand(chatId, text);
            } else {
                handleParameters(chatId, text);
            }
        } catch (Exception e) {
            sendErrorResponse(chatId, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–ø—Ä–æ—Å–∞: " + e.getMessage());
        }
    }

    private void handleCommand(String chatId, String command) throws TelegramApiException {
        switch (command) {
            case "/start":
                sendWelcomeMessage(chatId);
                break;
            case "/help":
                sendHelpMessage(chatId);
                break;
            default:
                sendResponse(chatId, "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –í–≤–µ–¥–∏—Ç–µ /help –¥–ª—è —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥.");
        }
    }

    private void handleParameters(String chatId, String parameters) throws TelegramApiException {
        try {
            List<String> params = Arrays.asList(parameters.split(",\\s*"));

            if (params.size() != 7) {
                sendParameterPrompt(chatId);
                return;
            }

            // –ü–∞—Ä—Å–∏–Ω–≥ –∏ –≤–∞–ª–∏–¥–∞—Ü–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
            double pH = parseAndValidate(chatId, params.get(0), "ph");
            int –≤–æ–∑—Ä–∞—Å—Ç–ß–∞—Å—ã = (int) parseAndValidate(chatId, params.get(1), "age");
            int –∞–ø–≥–∞—Ä = (int) parseAndValidate(chatId, params.get(2), "apgar");
            int –≤–µ—Å = (int) parseAndValidate(chatId, params.get(3), "weight");
            double paO2 = parseAndValidate(chatId, params.get(4), "pao2");
            int –ø–æ—Ä–æ–∫–∏ = parseBinary(chatId, params.get(5), "malformations");
            int –∏–Ω—Ç—É–±–∞—Ü–∏—è = parseBinary(chatId, params.get(6), "intubation");

            // –†–∞—Å—á–µ—Ç –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–π
            int –±–∞–ª–ª—ã = calculateHermansenScore(pH, –≤–æ–∑—Ä–∞—Å—Ç–ß–∞—Å—ã, –∞–ø–≥–∞—Ä, –≤–µ—Å, paO2, –ø–æ—Ä–æ–∫–∏, –∏–Ω—Ç—É–±–∞—Ü–∏—è);
            double –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å = calculateMortalityProbability(pH, –≤–æ–∑—Ä–∞—Å—Ç–ß–∞—Å—ã, –∞–ø–≥–∞—Ä, –≤–µ—Å, paO2, –ø–æ—Ä–æ–∫–∏, –∏–Ω—Ç—É–±–∞—Ü–∏—è);

            // –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞
            String —Ä–µ–∑—É–ª—å—Ç–∞—Ç = buildAssessmentResponse(–±–∞–ª–ª—ã, –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å, pH, –≤–æ–∑—Ä–∞—Å—Ç–ß–∞—Å—ã, –∞–ø–≥–∞—Ä, –≤–µ—Å, paO2, –ø–æ—Ä–æ–∫–∏, –∏–Ω—Ç—É–±–∞—Ü–∏—è);
            sendResponse(chatId, —Ä–µ–∑—É–ª—å—Ç–∞—Ç);

        } catch (NumberFormatException e) {
            sendResponse(chatId, "–û—à–∏–±–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞ —á–∏—Å–µ–ª. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Ç–æ—á–∫—É –¥–ª—è –¥–µ—Å—è—Ç–∏—á–Ω—ã—Ö –¥—Ä–æ–±–µ–π (–Ω–∞–ø—Ä–∏–º–µ—Ä 7.35)");
        } catch (IllegalArgumentException e) {
            // –°–æ–æ–±—â–µ–Ω–∏—è –≤–∞–ª–∏–¥–∞—Ü–∏–∏ —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã
        }
    }

    private double parseAndValidate(String chatId, String –∑–Ω–∞—á–µ–Ω–∏–µ, String paramName)
            throws TelegramApiException, NumberFormatException, IllegalArgumentException {
        RiskDataStorage.ParameterConfig config = storage.getParameterConfig(paramName);
        try {
            double —á–∏—Å–ª–æ = Double.parseDouble(–∑–Ω–∞—á–µ–Ω–∏–µ);

            // –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ–ø–∞–¥–∞–µ—Ç –≤ –∫–∞–∫–æ–π-–ª–∏–±–æ –¥–∏–∞–ø–∞–∑–æ–Ω
            config.findRange(—á–∏—Å–ª–æ);
            return —á–∏—Å–ª–æ;

        } catch (NumberFormatException e) {
            sendResponse(chatId, "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è " + config.getDescription() +
                    ". –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –≤ —Ñ–æ—Ä–º–∞—Ç–µ 7.35");
            throw e;
        } catch (IllegalArgumentException e) {
            sendResponse(chatId, "–ó–Ω–∞—á–µ–Ω–∏–µ " + –∑–Ω–∞—á–µ–Ω–∏–µ + " –≤–Ω–µ –¥–æ–ø—É—Å—Ç–∏–º–æ–≥–æ –¥–∏–∞–ø–∞–∑–æ–Ω–∞ –¥–ª—è " +
                    config.getDescription());
            throw e;
        }
    }

    private int parseBinary(String chatId, String –∑–Ω–∞—á–µ–Ω–∏–µ, String paramName)
            throws TelegramApiException, NumberFormatException, IllegalArgumentException {
        int —á–∏—Å–ª–æ = (int) parseAndValidate(chatId, –∑–Ω–∞—á–µ–Ω–∏–µ, paramName);
        if (—á–∏—Å–ª–æ != 0 && —á–∏—Å–ª–æ != 1) {
            sendResponse(chatId, "–î–ª—è –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ " + storage.getParameterConfig(paramName).getDescription() +
                    " –≤–≤–µ–¥–∏—Ç–µ 0 (–Ω–µ—Ç) –∏–ª–∏ 1 (–¥–∞)");
            throw new IllegalArgumentException();
        }
        return —á–∏—Å–ª–æ;
    }

    private int calculateHermansenScore(double pH, int –≤–æ–∑—Ä–∞—Å—Ç–ß–∞—Å—ã, int –∞–ø–≥–∞—Ä, int –≤–µ—Å,
                                        double paO2, int –ø–æ—Ä–æ–∫–∏, int –∏–Ω—Ç—É–±–∞—Ü–∏—è) {
        int –±–∞–ª–ª—ã = 0;

        // –ü–æ–ª—É—á–∞–µ–º –±–∞–ª–ª—ã –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞
        –±–∞–ª–ª—ã += storage.getParameterConfig("ph").findRange(pH).getScore();
        –±–∞–ª–ª—ã += storage.getParameterConfig("age").findRange(–≤–æ–∑—Ä–∞—Å—Ç–ß–∞—Å—ã).getScore();
        –±–∞–ª–ª—ã += storage.getParameterConfig("apgar").findRange(–∞–ø–≥–∞—Ä).getScore();
        –±–∞–ª–ª—ã += storage.getParameterConfig("weight").findRange(–≤–µ—Å).getScore();
        –±–∞–ª–ª—ã += storage.getParameterConfig("pao2").findRange(paO2).getScore();
        –±–∞–ª–ª—ã += storage.getParameterConfig("malformations").findRange(–ø–æ—Ä–æ–∫–∏).getScore();
        –±–∞–ª–ª—ã += storage.getParameterConfig("intubation").findRange(–∏–Ω—Ç—É–±–∞—Ü–∏—è).getScore();

        return –±–∞–ª–ª—ã;
    }

    private double calculateMortalityProbability(double pH, int –≤–æ–∑—Ä–∞—Å—Ç–ß–∞—Å—ã, int –∞–ø–≥–∞—Ä, int –≤–µ—Å,
                                                 double paO2, int –ø–æ—Ä–æ–∫–∏, int –∏–Ω—Ç—É–±–∞—Ü–∏—è) {
        RiskDataStorage.ProbabilityFormula formula = storage.getProbabilityFormula();
        double logit = formula.calculateLogit(pH, –≤–æ–∑—Ä–∞—Å—Ç–ß–∞—Å—ã, –∞–ø–≥–∞—Ä, –≤–µ—Å, paO2, –ø–æ—Ä–æ–∫–∏, –∏–Ω—Ç—É–±–∞—Ü–∏—è);
        return Math.exp(logit) / (1 + Math.exp(logit));
    }

    private String buildAssessmentResponse(int –±–∞–ª–ª—ã, double –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å,
                                           double pH, int –≤–æ–∑—Ä–∞—Å—Ç–ß–∞—Å—ã, int –∞–ø–≥–∞—Ä, int –≤–µ—Å,
                                           double paO2, int –ø–æ—Ä–æ–∫–∏, int –∏–Ω—Ç—É–±–∞—Ü–∏—è) {
        RiskDataStorage.RiskLevel —É—Ä–æ–≤–µ–Ω—å–†–∏—Å–∫–∞ = storage.getRiskLevel(–±–∞–ª–ª—ã);

        StringBuilder –æ—Ç–≤–µ—Ç = new StringBuilder();
        –æ—Ç–≤–µ—Ç.append("‚öïÔ∏è –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ—Ü–µ–Ω–∫–∏ —Ä–∏—Å–∫–∞ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ ‚öïÔ∏è\n\n");
        –æ—Ç–≤–µ—Ç.append("‚ñâ –û–±—â–∏–π –±–∞–ª–ª: ").append(–±–∞–ª–ª—ã).append(" –∏–∑ 40\n");
        –æ—Ç–≤–µ—Ç.append("‚ñâ –î–∏–∞–≥–Ω–æ–∑: ").append(—É—Ä–æ–≤–µ–Ω—å–†–∏—Å–∫–∞.getDiagnosis()).append("\n");
        –æ—Ç–≤–µ—Ç.append("‚ñâ –í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å: ").append(df.format(–≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å))
                .append(" (").append(—É—Ä–æ–≤–µ–Ω—å–†–∏—Å–∫–∞.getProbabilityRange()).append(")\n\n");

        –æ—Ç–≤–µ—Ç.append("üìã –î–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤:\n");
        –æ—Ç–≤–µ—Ç.append(formatParameterDetail("pH –∫—Ä–æ–≤–∏", pH, "ph"));
        –æ—Ç–≤–µ—Ç.append(formatParameterDetail("–í–æ–∑—Ä–∞—Å—Ç", –≤–æ–∑—Ä–∞—Å—Ç–ß–∞—Å—ã, "age"));
        –æ—Ç–≤–µ—Ç.append(formatParameterDetail("–û—Ü–µ–Ω–∫–∞ –ø–æ –ê–ø–≥–∞—Ä", –∞–ø–≥–∞—Ä, "apgar"));
        –æ—Ç–≤–µ—Ç.append(formatParameterDetail("–í–µ—Å –ø—Ä–∏ —Ä–æ–∂–¥–µ–Ω–∏–∏", –≤–µ—Å, "weight"));
        –æ—Ç–≤–µ—Ç.append(formatParameterDetail("PaO2", paO2, "pao2"));
        –æ—Ç–≤–µ—Ç.append(formatParameterDetail("–í—Ä–æ–∂–¥–µ–Ω–Ω—ã–µ –ø–æ—Ä–æ–∫–∏", –ø–æ—Ä–æ–∫–∏, "malformations"));
        –æ—Ç–≤–µ—Ç.append(formatParameterDetail("–ò–Ω—Ç—É–±–∞—Ü–∏—è", –∏–Ω—Ç—É–±–∞—Ü–∏—è, "intubation"));

        –æ—Ç–≤–µ—Ç.append("\nüöë –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:\n").append(—É—Ä–æ–≤–µ–Ω—å–†–∏—Å–∫–∞.getRecommendation());

        return –æ—Ç–≤–µ—Ç.toString();
    }

    private String formatParameterDetail(String paramName, double value, String configKey) {
        RiskDataStorage.ParameterConfig config = storage.getParameterConfig(configKey);
        RiskDataStorage.Range range = config.findRange(value);
        return String.format("‚Ä¢ %s: %.1f %s - %s (%d –±–∞–ª–ª–æ–≤)\n",
                paramName, value, config.getUnit(), range.getComment(), range.getScore());
    }

    private void sendParameterPrompt(String chatId) throws TelegramApiException {
        String message = "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤—Å–µ 7 –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é –≤ —Å–ª–µ–¥—É—é—â–µ–º –ø–æ—Ä—è–¥–∫–µ:\n\n" +
                "1. –£—Ä–æ–≤–µ–Ω—å pH –∫—Ä–æ–≤–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä: 7.35)\n" +
                "2. –í–æ–∑—Ä–∞—Å—Ç —Ä–µ–±–µ–Ω–∫–∞ –≤ —á–∞—Å–∞—Ö (–Ω–∞–ø—Ä–∏–º–µ—Ä: 3)\n" +
                "3. –û—Ü–µ–Ω–∫–∞ –ø–æ —à–∫–∞–ª–µ –ê–ø–≥–∞—Ä –Ω–∞ 1-–π –º–∏–Ω—É—Ç–µ (0-10)\n" +
                "4. –í–µ—Å –ø—Ä–∏ —Ä–æ–∂–¥–µ–Ω–∏–∏ –≤ –≥—Ä–∞–º–º–∞—Ö (–Ω–∞–ø—Ä–∏–º–µ—Ä: 2500)\n" +
                "5. –£—Ä–æ–≤–µ–Ω—å PaO2 –≤ –∫–ü–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä: 5.2)\n" +
                "6. –ù–∞–ª–∏—á–∏–µ –≤—Ä–æ–∂–¥–µ–Ω–Ω—ã—Ö –ø–æ—Ä–æ–∫–æ–≤ (1 - –µ—Å—Ç—å, 0 - –Ω–µ—Ç)\n" +
                "7. –ò–Ω—Ç—É–±–∏—Ä–æ–≤–∞–Ω –ª–∏ —Ä–µ–±–µ–Ω–æ–∫ (1 - –¥–∞, 0 - –Ω–µ—Ç)\n\n" +
                "–ü—Ä–∏–º–µ—Ä –≤–≤–æ–¥–∞: 7.25, 2, 5, 1800, 4.8, 0, 1";
        sendResponse(chatId, message);
    }

    private void sendWelcomeMessage(String chatId) throws TelegramApiException {
        String message = "üë∂ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç –æ—Ü–µ–Ω–∫–∏ —Ä–∏—Å–∫–∞ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –Ω–æ–≤–æ—Ä–æ–∂–¥–µ–Ω–Ω—ã—Ö!\n\n" +
                "–≠—Ç–æ—Ç –±–æ—Ç —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç —Ä–∏—Å–∫ –ø–æ —à–∫–∞–ª–µ Hermansen –∏ –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –Ω–µ–±–ª–∞–≥–æ–ø—Ä–∏—è—Ç–Ω–æ–≥–æ –∏—Å—Ö–æ–¥–∞ " +
                "–Ω–∞ –æ—Å–Ω–æ–≤–∞–Ω–∏–∏ 7 –∫–ª—é—á–µ–≤—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤.\n\n" +
                "–î–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –≤–≤–µ–¥–∏—Ç–µ –≤—Å–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ.\n\n" +
                "–í–≤–µ–¥–∏—Ç–µ /help –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –∏–ª–∏ –Ω–∞—á–Ω–∏—Ç–µ —Å—Ä–∞–∑—É —Å –≤–≤–æ–¥–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤.";
        sendResponse(chatId, message);
    }

    private void sendHelpMessage(String chatId) throws TelegramApiException {
        String message = "üìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–∞:\n\n" +
                "1. –ü–æ–¥–≥–æ—Ç–æ–≤—å—Ç–µ —Å–ª–µ–¥—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ –ø–∞—Ü–∏–µ–Ω—Ç–∞:\n" +
                "   - –ê–Ω–∞–ª–∏–∑ –∫—Ä–æ–≤–∏ (pH, PaO2)\n" +
                "   - –û—Å–Ω–æ–≤–Ω—ã–µ –∞–Ω—Ç—Ä–æ–ø–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ\n" +
                "   - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –ø—Ä–∏ —Ä–æ–∂–¥–µ–Ω–∏–∏\n\n" +
                "2. –í–≤–µ–¥–∏—Ç–µ –≤—Å–µ 7 –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é –≤ —Å—Ç—Ä–æ–≥–æ–º –ø–æ—Ä—è–¥–∫–µ:\n" +
                "   - pH –∫—Ä–æ–≤–∏\n" +
                "   - –í–æ–∑—Ä–∞—Å—Ç –≤ —á–∞—Å–∞—Ö\n" +
                "   - –û—Ü–µ–Ω–∫–∞ –ø–æ –ê–ø–≥–∞—Ä (1-—è –º–∏–Ω—É—Ç–∞)\n" +
                "   - –í–µ—Å –ø—Ä–∏ —Ä–æ–∂–¥–µ–Ω–∏–∏ (–≥)\n" +
                "   - PaO2 (–∫–ü–∞)\n" +
                "   - –ù–∞–ª–∏—á–∏–µ –ø–æ—Ä–æ–∫–æ–≤ (0/1)\n" +
                "   - –ò–Ω—Ç—É–±–∞—Ü–∏—è (0/1)\n\n" +
                "3. –ë–æ—Ç —Ä–∞—Å—Å—á–∏—Ç–∞–µ—Ç –∏ –≤–µ—Ä–Ω–µ—Ç:\n" +
                "   - –û–±—â–∏–π –±–∞–ª–ª —Ä–∏—Å–∫–∞\n" +
                "   - –£—Ä–æ–≤–µ–Ω—å —Ä–∏—Å–∫–∞\n" +
                "   - –í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –Ω–µ–±–ª–∞–≥–æ–ø—Ä–∏—è—Ç–Ω–æ–≥–æ –∏—Å—Ö–æ–¥–∞\n" +
                "   - –ü–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—é\n" +
                "   - –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∫–µ\n\n" +
                "–ü—Ä–∏–º–µ—Ä –≤–≤–æ–¥–∞: 7.25, 2, 5, 1800, 4.8, 0, 1";
        sendResponse(chatId, message);
    }

    private void sendResponse(String chatId, String text) throws TelegramApiException {
        SendMessage message = new SendMessage();
        message.setChatId(chatId);
        message.setText(text);
        execute(message);
    }

    private void sendErrorResponse(String chatId, String text) {
        try {
            sendResponse(chatId, "‚ö†Ô∏è " + text);
        } catch (TelegramApiException e) {
            e.printStackTrace();
        }
    }
}