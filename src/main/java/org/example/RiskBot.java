package org.example;

import io.github.cdimascio.dotenv.Dotenv;
import org.telegram.telegrambots.bots.TelegramLongPollingBot;
import org.telegram.telegrambots.meta.api.methods.send.SendMessage;
import org.telegram.telegrambots.meta.api.objects.Message;
import org.telegram.telegrambots.meta.api.objects.Update;
import org.telegram.telegrambots.meta.exceptions.TelegramApiException;

import java.text.DecimalFormat;
import java.util.*;

public class RiskBot extends TelegramLongPollingBot {
    private final RiskDataStorage storage;
    private final DecimalFormat df = new DecimalFormat("0.00%");
    private final Map<String, UserState> userStates = new HashMap<>();

    public RiskBot() {
        this.storage = new RiskDataStorage();
    }

    @Override
    public String getBotUsername() {
        return "NeoRisk_bot";
    }

    @Override
    public String getBotToken() {
        Dotenv dotenv = Dotenv.configure()
                .filename("token.env") // –µ—Å–ª–∏ –Ω–µ .env
                .load();
        return dotenv.get("BOT_TOKEN");
    }

    @Override
    public void onUpdateReceived(Update update) {
        if (!update.hasMessage() || !update.getMessage().hasText()) {
            return;
        }

        Message message = update.getMessage();
        String chatId = message.getChatId().toString();
        String text = message.getText().trim();

        try {
            UserState userState = userStates.computeIfAbsent(chatId, k -> new UserState());

            if (text.startsWith("/")) {
                handleCommand(chatId, text);
                // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏ –∫–æ–º–∞–Ω–¥–∞—Ö
                if ("/start".equals(text) || "/help".equals(text)) {
                    userState.reset();
                }
            } else {
                handleParameterInput(chatId, text, userState);
            }
        } catch (Exception e) {
            sendErrorResponse(chatId, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: " + e.getMessage());
        }
    }

    private void handleCommand(String chatId, String command) throws TelegramApiException {
        switch (command) {
            case "/start":
                sendWelcomeMessage(chatId);
                break;
            case "/help":
                sendHelpMessage(chatId);
                break;
            default:
                sendResponse(chatId, "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –í–≤–µ–¥–∏—Ç–µ /help –¥–ª—è —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥.");
        }
    }

    private void handleParameterInput(String chatId, String text, UserState userState) throws TelegramApiException {
        try {
            String paramName = userState.getCurrentParameterName();

            // ‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –ø–∞—Ä—Å–∏–Ω–≥ –∑–Ω–∞—á–µ–Ω–∏—è
            if (paramName.contains("pH –∫—Ä–æ–≤–∏") || paramName.contains("PaO2")) {
                Double.parseDouble(text); // –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–≤–µ—Ä–∫–∞
            } else if (paramName.contains("–í–æ–∑—Ä–∞—Å—Ç") ||
                    paramName.contains("–ê–ø–≥–∞—Ä") ||
                    paramName.contains("–í–µ—Å")) {
                Integer.parseInt(text);
            } else if (paramName.contains("–ø–æ—Ä–æ–∫–∏") || paramName.contains("–ò–Ω—Ç—É–±–∞—Ü–∏—è")) {
                int value = Integer.parseInt(text);
                if (value != 0 && value != 1) {
                    throw new IllegalArgumentException("–í–≤–µ–¥–∏—Ç–µ 0 –∏–ª–∏ 1.");
                }
            }

            // ‚úÖ –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –≤—Å—ë –ø—Ä–æ—à–ª–æ —É—Å–ø–µ—à–Ω–æ
            userState.addParameterValue(text);

            // ‚úÖ –ü—Ä–æ–≤–µ—Ä—è–µ–º ‚Äî –∑–∞–≤–µ—Ä—à–µ–Ω—ã –ª–∏ –≤—Å–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
            if (userState.isComplete()) {
                processFinalParameters(chatId, userState);
            } else {
                sendResponse(chatId, "–í–≤–µ–¥–∏—Ç–µ —Å–ª–µ–¥—É—é—â–∏–π –ø–∞—Ä–∞–º–µ—Ç—Ä: " + getFormattedParameterPrompt(userState.getCurrentParameterName()));
            }

        } catch (NumberFormatException e) {
            sendResponse(chatId, "‚ö†Ô∏è –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ–≤–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ.");
        } catch (IllegalArgumentException e) {
            sendResponse(chatId, "‚ö†Ô∏è " + e.getMessage());
        }
    }

    private String getFormattedParameterPrompt(String paramName) {
        switch (paramName) {
            case "pH –∫—Ä–æ–≤–∏":
                return "pH –∫—Ä–æ–≤–∏ (—É—Ä–æ–≤–µ–Ω—å –∫–∏—Å–ª–æ—Ç–Ω–æ—Å—Ç–∏ –∫—Ä–æ–≤–∏; –Ω–∞–ø—Ä–∏–º–µ—Ä: 7.2)";
            case "–í–æ–∑—Ä–∞—Å—Ç –≤ —á–∞—Å–∞—Ö":
                return "–í–æ–∑—Ä–∞—Å—Ç –≤ —á–∞—Å–∞—Ö (–≤–æ–∑—Ä–∞—Å—Ç –Ω–æ–≤–æ—Ä–æ–∂–¥—ë–Ω–Ω–æ–≥–æ –Ω–∞ –º–æ–º–µ–Ω—Ç –æ—Ü–µ–Ω–∫–∏; –Ω–∞–ø—Ä–∏–º–µ—Ä: 5)";
            case "–û—Ü–µ–Ω–∫–∞ –ø–æ –ê–ø–≥–∞—Ä":
                return "–û—Ü–µ–Ω–∫–∞ –ø–æ —à–∫–∞–ª–µ –ê–ø–≥–∞—Ä (–æ—Ç 0 –¥–æ 10; –æ—Ü–µ–Ω–∏–≤–∞–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ä–µ–±—ë–Ω–∫–∞ —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ —Ä–æ–∂–¥–µ–Ω–∏—è, –Ω–∞–ø—Ä–∏–º–µ—Ä: 6)";
            case "–í–µ—Å –ø—Ä–∏ —Ä–æ–∂–¥–µ–Ω–∏–∏":
                return "–í–µ—Å –ø—Ä–∏ —Ä–æ–∂–¥–µ–Ω–∏–∏ –≤ –≥—Ä–∞–º–º–∞—Ö (–Ω–∞–ø—Ä–∏–º–µ—Ä: 3200)";
            case "PaO2":
                return "PaO2 –≤ –∫–ü–∞ (–ø–∞—Ä—Ü–∏–∞–ª—å–Ω–æ–µ –¥–∞–≤–ª–µ–Ω–∏–µ –∫–∏—Å–ª–æ—Ä–æ–¥–∞ –≤ –∞—Ä—Ç–µ—Ä–∏–∞–ª—å–Ω–æ–π –∫—Ä–æ–≤–∏; –Ω–∞–ø—Ä–∏–º–µ—Ä: 4.5)";
            case "–í—Ä–æ–∂–¥–µ–Ω–Ω—ã–µ –ø–æ—Ä–æ–∫–∏ (0 - –Ω–µ—Ç, 1 - –¥–∞)":
                return "–í—Ä–æ–∂–¥–µ–Ω–Ω—ã–µ –ø–æ—Ä–æ–∫–∏: –≤–≤–µ–¥–∏—Ç–µ 0 (–Ω–µ—Ç –ø–æ—Ä–æ–∫–æ–≤) –∏–ª–∏ 1 (–µ—Å—Ç—å –ø–æ—Ä–æ–∫–∏)";
            case "–ò–Ω—Ç—É–±–∞—Ü–∏—è (0 - –Ω–µ—Ç, 1 - –¥–∞)":
                return "–ò–Ω—Ç—É–±–∞—Ü–∏—è: –≤–≤–µ–¥–∏—Ç–µ 0 (–Ω–µ –±—ã–ª–∞ –ø—Ä–æ–≤–µ–¥–µ–Ω–∞) –∏–ª–∏ 1 (–ø—Ä–æ–≤–æ–¥–∏–ª–∞—Å—å –∏–Ω—Ç—É–±–∞—Ü–∏—è)";
            default:
                return paramName;
        }
    }

    private void processFinalParameters(String chatId, UserState userState) throws TelegramApiException {
        try {
            List<String> params = userState.parameterValues;
            double pH = Double.parseDouble(params.get(0));
            int –≤–æ–∑—Ä–∞—Å—Ç–ß–∞—Å—ã = Integer.parseInt(params.get(1));
            int –∞–ø–≥–∞—Ä = Integer.parseInt(params.get(2));
            int –≤–µ—Å = Integer.parseInt(params.get(3));
            double paO2 = Double.parseDouble(params.get(4));
            int –ø–æ—Ä–æ–∫–∏ = Integer.parseInt(params.get(5));
            int –∏–Ω—Ç—É–±–∞—Ü–∏—è = Integer.parseInt(params.get(6));

            int –±–∞–ª–ª—ã = calculateHermansenScore(pH, –≤–æ–∑—Ä–∞—Å—Ç–ß–∞—Å—ã, –∞–ø–≥–∞—Ä, –≤–µ—Å, paO2, –ø–æ—Ä–æ–∫–∏, –∏–Ω—Ç—É–±–∞—Ü–∏—è);
            double –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å = calculateMortalityProbability(pH, –≤–æ–∑—Ä–∞—Å—Ç–ß–∞—Å—ã, –∞–ø–≥–∞—Ä, –≤–µ—Å, paO2, –ø–æ—Ä–æ–∫–∏, –∏–Ω—Ç—É–±–∞—Ü–∏—è);

            String —Ä–µ–∑—É–ª—å—Ç–∞—Ç = buildAssessmentResponse(–±–∞–ª–ª—ã, –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å, pH, –≤–æ–∑—Ä–∞—Å—Ç–ß–∞—Å—ã, –∞–ø–≥–∞—Ä, –≤–µ—Å, paO2, –ø–æ—Ä–æ–∫–∏, –∏–Ω—Ç—É–±–∞—Ü–∏—è);
            sendResponse(chatId, —Ä–µ–∑—É–ª—å—Ç–∞—Ç);

            // –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
            userState.reset();
        } catch (Exception e) {
            sendErrorResponse(chatId, "–û—à–∏–±–∫–∞ —Ä–∞—Å—á–µ—Ç–∞: " + e.getMessage());
            userState.reset();
        }
    }

    private int calculateHermansenScore(double pH, int –≤–æ–∑—Ä–∞—Å—Ç–ß–∞—Å—ã, int –∞–ø–≥–∞—Ä, int –≤–µ—Å,
                                        double paO2, int –ø–æ—Ä–æ–∫–∏, int –∏–Ω—Ç—É–±–∞—Ü–∏—è) {
        int –±–∞–ª–ª—ã = 0;

        // –ü–æ–ª—É—á–∞–µ–º –±–∞–ª–ª—ã –∏–∑ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞
        –±–∞–ª–ª—ã += storage.getParameterConfig("ph").findRange(pH).getScore();
        –±–∞–ª–ª—ã += storage.getParameterConfig("age").findRange(–≤–æ–∑—Ä–∞—Å—Ç–ß–∞—Å—ã).getScore();
        –±–∞–ª–ª—ã += storage.getParameterConfig("apgar").findRange(–∞–ø–≥–∞—Ä).getScore();
        –±–∞–ª–ª—ã += storage.getParameterConfig("weight").findRange(–≤–µ—Å).getScore();
        –±–∞–ª–ª—ã += storage.getParameterConfig("pao2").findRange(paO2).getScore();
        –±–∞–ª–ª—ã += storage.getParameterConfig("malformations").findRange(–ø–æ—Ä–æ–∫–∏).getScore();
        –±–∞–ª–ª—ã += storage.getParameterConfig("intubation").findRange(–∏–Ω—Ç—É–±–∞—Ü–∏—è).getScore();

        return –±–∞–ª–ª—ã;
    }

    private double calculateMortalityProbability(double pH, int –≤–æ–∑—Ä–∞—Å—Ç–ß–∞—Å—ã, int –∞–ø–≥–∞—Ä, int –≤–µ—Å,
                                                 double paO2, int –ø–æ—Ä–æ–∫–∏, int –∏–Ω—Ç—É–±–∞—Ü–∏—è) {
        RiskDataStorage.ProbabilityFormula formula = storage.getProbabilityFormula();
        double logit = formula.calculateLogit(pH, –≤–æ–∑—Ä–∞—Å—Ç–ß–∞—Å—ã, –∞–ø–≥–∞—Ä, –≤–µ—Å, paO2, –ø–æ—Ä–æ–∫–∏, –∏–Ω—Ç—É–±–∞—Ü–∏—è);
        return Math.exp(logit) / (1 + Math.exp(logit));
    }

    private String buildAssessmentResponse(int –±–∞–ª–ª—ã, double –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å,
                                           double pH, int –≤–æ–∑—Ä–∞—Å—Ç–ß–∞—Å—ã, int –∞–ø–≥–∞—Ä, int –≤–µ—Å,
                                           double paO2, int –ø–æ—Ä–æ–∫–∏, int –∏–Ω—Ç—É–±–∞—Ü–∏—è) {
        RiskDataStorage.RiskLevel —É—Ä–æ–≤–µ–Ω—å–†–∏—Å–∫–∞ = storage.getRiskLevel(–±–∞–ª–ª—ã);

        StringBuilder –æ—Ç–≤–µ—Ç = new StringBuilder();
        –æ—Ç–≤–µ—Ç.append("‚öïÔ∏è –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ—Ü–µ–Ω–∫–∏ —Ä–∏—Å–∫–∞ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ ‚öïÔ∏è\n\n");
        –æ—Ç–≤–µ—Ç.append("‚ñâ –û–±—â–∏–π –±–∞–ª–ª: ").append(–±–∞–ª–ª—ã).append(" –∏–∑ 40\n");
        –æ—Ç–≤–µ—Ç.append("‚ñâ –î–∏–∞–≥–Ω–æ–∑: ").append(—É—Ä–æ–≤–µ–Ω—å–†–∏—Å–∫–∞.getDiagnosis()).append("\n");
        –æ—Ç–≤–µ—Ç.append("‚ñâ –í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å: ").append(df.format(–≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å))
                .append(" (").append(—É—Ä–æ–≤–µ–Ω—å–†–∏—Å–∫–∞.getProbabilityRange()).append(")\n\n");

        –æ—Ç–≤–µ—Ç.append("üìã –î–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤:\n");
        –æ—Ç–≤–µ—Ç.append(formatParameterDetail("pH –∫—Ä–æ–≤–∏", pH, "ph"));
        –æ—Ç–≤–µ—Ç.append(formatParameterDetail("–í–æ–∑—Ä–∞—Å—Ç", –≤–æ–∑—Ä–∞—Å—Ç–ß–∞—Å—ã, "age"));
        –æ—Ç–≤–µ—Ç.append(formatParameterDetail("–û—Ü–µ–Ω–∫–∞ –ø–æ –ê–ø–≥–∞—Ä", –∞–ø–≥–∞—Ä, "apgar"));
        –æ—Ç–≤–µ—Ç.append(formatParameterDetail("–í–µ—Å –ø—Ä–∏ —Ä–æ–∂–¥–µ–Ω–∏–∏", –≤–µ—Å, "weight"));
        –æ—Ç–≤–µ—Ç.append(formatParameterDetail("PaO2", paO2, "pao2"));
        –æ—Ç–≤–µ—Ç.append(formatParameterDetail("–í—Ä–æ–∂–¥–µ–Ω–Ω—ã–µ –ø–æ—Ä–æ–∫–∏", –ø–æ—Ä–æ–∫–∏, "malformations"));
        –æ—Ç–≤–µ—Ç.append(formatParameterDetail("–ò–Ω—Ç—É–±–∞—Ü–∏—è", –∏–Ω—Ç—É–±–∞—Ü–∏—è, "intubation"));

        –æ—Ç–≤–µ—Ç.append("\nüöë –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:\n").append(—É—Ä–æ–≤–µ–Ω—å–†–∏—Å–∫–∞.getRecommendation());

        // –î–æ–±–∞–≤–ª–µ–Ω–æ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ
        –æ—Ç–≤–µ—Ç.append("\n\nüîÅ –î–ª—è –Ω–æ–≤–æ–≥–æ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –≤–≤–µ–¥–∏—Ç–µ /start");

        return –æ—Ç–≤–µ—Ç.toString();
    }

    private String formatParameterDetail(String paramName, double value, String configKey) {
        RiskDataStorage.ParameterConfig config = storage.getParameterConfig(configKey);
        RiskDataStorage.Range range = config.findRange(value);
        return String.format("‚Ä¢ %s: %.1f %s - %s (%d –±–∞–ª–ª–æ–≤)\n",
                paramName, value, config.getUnit(), range.getComment(), range.getScore());
    }

    private void sendWelcomeMessage(String chatId) throws TelegramApiException {
        UserState userState = userStates.computeIfAbsent(chatId, k -> new UserState());
        userState.reset();

        String message = "üë∂ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –±–æ—Ç –æ—Ü–µ–Ω–∫–∏ —Ä–∏—Å–∫–∞ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –Ω–æ–≤–æ—Ä–æ–∂–¥–µ–Ω–Ω—ã—Ö!\n\n" +
                "–ë–æ—Ç –±—É–¥–µ—Ç –∑–∞–ø—Ä–∞—à–∏–≤–∞—Ç—å –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ –æ–¥–Ω–æ–º—É.\n\n" +
                "–í–≤–µ–¥–∏—Ç–µ /help –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ–π –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –∏–ª–∏ –Ω–∞—á–Ω–∏—Ç–µ —Å—Ä–∞–∑—É —Å –≤–≤–æ–¥–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤. \n\n" +
                "–ü–µ—Ä–≤—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä: " + userState.getCurrentParameterName() + "(—É—Ä–æ–≤–µ–Ω—å –∫–∏—Å–ª–æ—Ç–Ω–æ—Å—Ç–∏ –∫—Ä–æ–≤–∏; –Ω–∞–ø—Ä–∏–º–µ—Ä: 7.2)";
        sendResponse(chatId, message);
    }

    private void sendHelpMessage(String chatId) throws TelegramApiException {
        String message = "üìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–∞:\n\n" +
                "1. –ü–æ–¥–≥–æ—Ç–æ–≤—å—Ç–µ —Å–ª–µ–¥—É—é—â–∏–µ –¥–∞–Ω–Ω—ã–µ –ø–∞—Ü–∏–µ–Ω—Ç–∞:\n" +
                "   - –ê–Ω–∞–ª–∏–∑ –∫—Ä–æ–≤–∏ (pH, PaO2)\n" +
                "   - –û—Å–Ω–æ–≤–Ω—ã–µ –∞–Ω—Ç—Ä–æ–ø–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ\n" +
                "   - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –ø—Ä–∏ —Ä–æ–∂–¥–µ–Ω–∏–∏\n\n" +
                "2. –í–≤–µ–¥–∏—Ç–µ –≤—Å–µ 7 –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é –≤ —Å—Ç—Ä–æ–≥–æ–º –ø–æ—Ä—è–¥–∫–µ:\n" +
                "   - pH –∫—Ä–æ–≤–∏\n" +
                "   - –í–æ–∑—Ä–∞—Å—Ç –≤ —á–∞—Å–∞—Ö\n" +
                "   - –û—Ü–µ–Ω–∫–∞ –ø–æ –ê–ø–≥–∞—Ä (1-—è –º–∏–Ω—É—Ç–∞)\n" +
                "   - –í–µ—Å –ø—Ä–∏ —Ä–æ–∂–¥–µ–Ω–∏–∏ (–≥)\n" +
                "   - PaO2 (–∫–ü–∞)\n" +
                "   - –ù–∞–ª–∏—á–∏–µ –ø–æ—Ä–æ–∫–æ–≤ (0/1)\n" +
                "   - –ò–Ω—Ç—É–±–∞—Ü–∏—è (0/1)\n\n" +
                "3. –ë–æ—Ç —Ä–∞—Å—Å—á–∏—Ç–∞–µ—Ç –∏ –≤–µ—Ä–Ω–µ—Ç:\n" +
                "   - –û–±—â–∏–π –±–∞–ª–ª —Ä–∏—Å–∫–∞\n" +
                "   - –£—Ä–æ–≤–µ–Ω—å —Ä–∏—Å–∫–∞\n" +
                "   - –í–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å –Ω–µ–±–ª–∞–≥–æ–ø—Ä–∏—è—Ç–Ω–æ–≥–æ –∏—Å—Ö–æ–¥–∞\n" +
                "   - –ü–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—é\n" +
                "   - –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∫–µ\n\n" +
                "–ü—Ä–∏–º–µ—Ä –≤–≤–æ–¥–∞: 7.25, 2, 5, 1800, 4.8, 0, 1 \n\n" +
                "–ï—Å–ª–∏ –≤—ã –æ–∑–Ω–∞–∫–æ–º–∏–ª–∏—Å—å —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–µ–π, –≤–≤–µ–¥–∏—Ç–µ /start, —á—Ç–æ–±—ã –Ω–∞—á–∞—Ç—å –≤–≤–æ–¥ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤";
        sendResponse(chatId, message);
    }

    private void sendResponse(String chatId, String text) throws TelegramApiException {
        SendMessage message = new SendMessage();
        message.setChatId(chatId);
        message.setText(text);
        execute(message);
    }

    private void sendErrorResponse(String chatId, String text) {
        try {
            sendResponse(chatId, "‚ö†Ô∏è " + text);
        } catch (TelegramApiException e) {
            e.printStackTrace();
        }
    }

    private static class UserState {
        private int currentParamIndex = 0;
        private final List<String> parameterValues = new ArrayList<>();
        private final String[] parameterNames = {
                "pH –∫—Ä–æ–≤–∏",
                "–í–æ–∑—Ä–∞—Å—Ç –≤ —á–∞—Å–∞—Ö",
                "–û—Ü–µ–Ω–∫–∞ –ø–æ –ê–ø–≥–∞—Ä",
                "–í–µ—Å –ø—Ä–∏ —Ä–æ–∂–¥–µ–Ω–∏–∏",
                "PaO2",
                "–í—Ä–æ–∂–¥–µ–Ω–Ω—ã–µ –ø–æ—Ä–æ–∫–∏ (0 - –Ω–µ—Ç, 1 - –¥–∞)",
                "–ò–Ω—Ç—É–±–∞—Ü–∏—è (0 - –Ω–µ—Ç, 1 - –¥–∞)"
        };

        public String getCurrentParameterName() {
            return parameterNames[currentParamIndex];
        }

        public void addParameterValue(String value) {
            parameterValues.add(value);
            currentParamIndex++;
        }

        public boolean isComplete() {
            return currentParamIndex >= parameterNames.length;
        }

        public void reset() {
            currentParamIndex = 0;
            parameterValues.clear();
        }
    }
}
